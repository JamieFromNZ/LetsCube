import type { Alg } from "../../alg";
import type { KStateData } from "../../kpuzzle";
export declare function setDebugMeasurePerf(newDebugMeasurePerf: boolean): void;
export declare enum PrefetchLevel {
    Auto = "auto",
    None = "none",
    Immediate = "immediate"
}
export declare const insideAPI: {
    initialize: (eventID: string) => Promise<void>;
    setScramblePrefetchLevel(prefetchLevel: PrefetchLevel): void;
    randomScrambleForEvent: (eventID: string) => Promise<Alg>;
    randomScrambleStringForEvent: (eventID: string) => Promise<string>;
    solve333ToString: (stateData: KStateData) => Promise<string>;
    solve222ToString: (stateData: KStateData) => Promise<string>;
    solveSkewbToString: (stateData: KStateData) => Promise<string>;
    solvePyraminxToString: (stateData: KStateData) => Promise<string>;
    solveMegaminxToString: (stateData: KStateData) => Promise<string>;
    setDebugMeasurePerf: (measure: boolean) => Promise<void>;
};
export declare type WorkerInsideAPI = typeof insideAPI;
