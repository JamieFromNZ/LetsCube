import type { Alg } from "./Alg";
import { TraversalUp } from "./traversal";
import type { Commutator, Conjugate, Grouping, LineComment, Move, Newline, Pause } from "./units";
export declare class ValidationError extends Error {
}
export declare abstract class ValidatorTraversal extends TraversalUp<void> {
}
export declare class FlatAlgValidator extends ValidatorTraversal {
    traverseAlg(alg: Alg): void;
    traverseGrouping(_grouping: Grouping): void;
    traverseMove(_move: Move): void;
    traverseCommutator(_commutator: Commutator): void;
    traverseConjugate(_conjugate: Conjugate): void;
    traversePause(_pause: Pause): void;
    traverseNewline(_newline: Newline): void;
    traverseLineComment(_comment: LineComment): void;
}
export declare type Validator = (a: Alg) => void;
export declare const validateFlatAlg: Validator;
