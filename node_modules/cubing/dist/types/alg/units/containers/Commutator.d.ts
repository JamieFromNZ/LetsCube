import { Alg, FlexibleAlgSource } from "../../Alg";
import { AlgCommon, Comparable } from "../../common";
import { IterationDirection } from "../../iteration";
import type { LeafUnit } from "../Unit";
export declare class Commutator extends AlgCommon<Commutator> {
    #private;
    constructor(aSource: FlexibleAlgSource, bSource: FlexibleAlgSource);
    get A(): Alg;
    get B(): Alg;
    isIdentical(other: Comparable): boolean;
    invert(): Commutator;
    experimentalExpand(iterDir?: IterationDirection, depth?: number): Generator<LeafUnit>;
    toString(): string;
}
