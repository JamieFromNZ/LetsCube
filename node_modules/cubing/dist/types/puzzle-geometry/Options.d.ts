import { PuzzleDescription } from "./PuzzleGeometry";
export declare function parseOptions(argv: string[]): {
    puzzleDescription: PuzzleDescription | null;
    options: PuzzleGeometryOptions;
};
declare type FaceName = string;
declare type OrientationDirection = [number, number, number];
export declare type FaceBasedOrientationDescription = [
    [
        FaceName,
        OrientationDirection
    ],
    [
        FaceName,
        OrientationDirection
    ]
];
export declare type BaseFaceCount = 4 | 6 | 8 | 12 | 20;
export declare type FaceBasedOrientationDescriptionLookup = Record<BaseFaceCount, FaceBasedOrientationDescription>;
export declare class PuzzleGeometryFullOptions {
    verbosity: number;
    allMoves: boolean;
    outerBlockMoves: boolean;
    vertexMoves: boolean;
    addRotations: boolean;
    moveList: string[] | null;
    fixedOrientation: boolean;
    fixedPieceType: null | "e" | "v" | "f";
    orientCenters: boolean;
    includeCornerOrbits: boolean;
    includeCenterOrbits: boolean;
    includeEdgeOrbits: boolean;
    excludeOrbits: string[];
    optimizeOrbits: boolean;
    grayCorners: boolean;
    grayCenters: boolean;
    grayEdges: boolean;
    puzzleOrientation: FaceBasedOrientationDescription | null;
    puzzleOrientations: FaceBasedOrientationDescriptionLookup | null;
    scrambleAmount: number;
    constructor(options?: PuzzleGeometryOptions);
}
export declare type PuzzleGeometryOptions = Partial<PuzzleGeometryFullOptions>;
export declare function parsePGOptionList(optionlist?: any[]): PuzzleGeometryOptions;
export {};
