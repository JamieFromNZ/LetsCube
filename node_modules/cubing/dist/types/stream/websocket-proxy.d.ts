import type { MoveEvent, OrientationEvent } from "../bluetooth";
import type { ProxyEvent } from "./proxy-event";
export declare class WebSocketProxySender {
    protected websocket: WebSocket;
    constructor(url: string);
    sendMoveEvent(e: MoveEvent): void;
    sendOrientationEvent(e: OrientationEvent): void;
    sendResetEvent(): void;
    protected sendProxyEvent(proxyEvent: ProxyEvent): void;
    protected onopen(): void;
    protected onerror(error: Error): void;
    protected onmessage(_e: MessageEvent): void;
}
export declare abstract class WebSocketProxyReceiver {
    protected websocket: WebSocket;
    constructor(url: string, socketOrigin?: string);
    protected onopen(): void;
    protected onerror(error: Error): void;
    protected onmessage(e: MessageEvent): void;
    abstract onProxyEvent(e: ProxyEvent): void;
}
