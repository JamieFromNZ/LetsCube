import type { KPuzzle } from ".";
import type { Alg, Move } from "../alg";
import type { KTransformationSource } from "./KPuzzle";
import type { KStateData } from "./KPuzzleDefinition";
import { KTransformation } from "./KTransformation";
export declare class KState {
    readonly kpuzzle: KPuzzle;
    readonly stateData: KStateData;
    constructor(kpuzzle: KPuzzle, stateData: KStateData);
    toJSON(): any;
    static fromTransformation(transformation: KTransformation): KState;
    /** @deprecated */
    apply(source: KTransformationSource): KState;
    applyTransformation(transformation: KTransformation): KState;
    applyMove(move: Move | string): KState;
    applyAlg(alg: Alg | string): KState;
    /** @deprecated */
    experimentalToTransformation(): KTransformation | null;
    experimentalIs3x3x3Solved(options: {
        ignorePuzzleOrientation: boolean;
        ignoreCenterOrientation: boolean;
    }): boolean;
}
