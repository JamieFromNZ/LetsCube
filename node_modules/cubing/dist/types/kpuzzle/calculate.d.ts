import type { KPuzzleDefinition } from ".";
import { Alg } from "../alg";
import type { KPuzzle } from "./KPuzzle";
import type { KOrbitDefinition, KTransformationOrbitData, KTransformationData } from "./KPuzzleDefinition";
import { KTransformation } from "./KTransformation";
export declare function isOrbitTransformationDataIdentityUncached(numOrientations: number, orbitTransformationData: KTransformationOrbitData): boolean;
export declare function isOrbitTransformationDataIdentical(orbitDefinition: KOrbitDefinition, orbitTransformationData1: KTransformationOrbitData, orbitTransformationData2: KTransformationOrbitData, options?: {
    ignoreOrientation?: boolean;
    ignorePermutation?: boolean;
}): boolean;
export declare function isTransformationDataIdentical(kpuzzle: KPuzzle, transformationData1: KTransformationData, transformationData2: KTransformationData): boolean;
export declare function invertTransformation(kpuzzle: KPuzzle, transformationData: KTransformationData): KTransformationData;
export declare function repeatTransformationUncached(kpuzzle: KPuzzle, transformationData: KTransformationData, amount: number): KTransformationData;
export declare const algToTransformation: (alg: Alg, kpuzzle: KPuzzle) => KTransformation;
export declare function canConvertStateToUniqueTransformationUncached(definition: KPuzzleDefinition): boolean;
export declare function transformationRepetitionOrder(definition: KPuzzleDefinition, transformation: KTransformation): number;
