import { TwistyPropSource } from "../TwistyProp";
export declare type CoordinateDegrees = number;
export interface OrbitCoordinates {
    latitude: CoordinateDegrees;
    longitude: CoordinateDegrees;
    distance: number;
}
export declare function orbitCoordinatesEqual(c1: OrbitCoordinates, c2: OrbitCoordinates): boolean;
export declare type OrbitCoordinatesRequest = Partial<OrbitCoordinates> | "auto";
export declare class OrbitCoordinatesRequestProp extends TwistyPropSource<OrbitCoordinatesRequest, Partial<OrbitCoordinates> | "auto"> {
    getDefaultValue(): OrbitCoordinatesRequest;
    canReuseValue(v1: OrbitCoordinates, v2: OrbitCoordinates): boolean;
    derive(newCoordinates: Partial<OrbitCoordinates> | "auto", oldValuePromise: Promise<OrbitCoordinatesRequest>): Promise<OrbitCoordinatesRequest>;
}
