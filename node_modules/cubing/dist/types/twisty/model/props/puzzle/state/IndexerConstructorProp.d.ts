import type { AlgIndexer } from "../../../..";
import type { Alg } from "../../../../../alg";
import type { KPuzzle } from "../../../../../kpuzzle";
import { TwistyPropDerived } from "../../TwistyProp";
import type { VisualizationStrategy } from "../../viewer/VisualizationStrategyProp";
import type { PuzzleID } from "../structure/PuzzleIDRequestProp";
import type { AlgWithIssues } from "./AlgProp";
import type { IndexerStrategyName } from "./IndexerConstructorRequestProp";
export declare type IndexerConstructor = new (kpuzzle: KPuzzle, alg: Alg) => AlgIndexer;
interface IndexerConstructorPropInputs {
    puzzle: PuzzleID;
    alg: AlgWithIssues;
    visualizationStrategy: VisualizationStrategy;
    indexerConstructorRequest: IndexerStrategyName;
}
export declare class IndexerConstructorProp extends TwistyPropDerived<IndexerConstructorPropInputs, IndexerConstructor> {
    derive(inputs: IndexerConstructorPropInputs): IndexerConstructor;
}
export {};
