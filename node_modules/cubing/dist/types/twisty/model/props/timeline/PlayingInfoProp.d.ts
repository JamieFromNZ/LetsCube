import { BoundaryType, Direction } from "../../../controllers/AnimationTypes";
import { TwistyPropSource } from "../TwistyProp";
export declare type SimpleDirection = Direction.Forwards | Direction.Backwards;
export interface PlayingInfo {
    playing: boolean;
    direction: SimpleDirection;
    untilBoundary: BoundaryType;
    loop: boolean;
}
export declare class PlayingInfoProp extends TwistyPropSource<PlayingInfo, Partial<PlayingInfo>> {
    getDefaultValue(): Promise<PlayingInfo>;
    derive(newInfo: Partial<PlayingInfo>, oldValuePromise: Promise<PlayingInfo>): Promise<PlayingInfo>;
    canReuseValue(v1: PlayingInfo, v2: PlayingInfo): boolean;
}
