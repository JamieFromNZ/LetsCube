import type { ButtonCommand } from "../../../views/control-panel/TwistyButtons";
import type { PlayingInfo } from "./PlayingInfoProp";
import type { DetailedTimelineInfo } from "./DetailedTimelineInfoProp";
import { TwistyPropDerived } from "../TwistyProp";
interface ButtonAppearance {
    enabled: boolean;
    icon: string;
    title: string;
}
export declare type ButtonAppearances = Record<ButtonCommand, ButtonAppearance>;
interface CoarseTimelineInfoInputs {
    playingInfo: PlayingInfo;
    detailedTimelineInfo: DetailedTimelineInfo;
}
export interface CoarseTimelineInfo {
    playing: boolean;
    atStart: boolean;
    atEnd: boolean;
}
export declare class CoarseTimelineInfoProp extends TwistyPropDerived<CoarseTimelineInfoInputs, CoarseTimelineInfo> {
    derive(inputs: CoarseTimelineInfoInputs): CoarseTimelineInfo;
    canReuseValue(v1: CoarseTimelineInfo, v2: CoarseTimelineInfo): boolean;
}
export {};
