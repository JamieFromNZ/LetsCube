import type { Vector3 } from "three";
import type { OrbitCoordinates } from "../../model/props/viewer/OrbitCoordinatesRequestProp";
import type { TwistyPlayerModel } from "../../model/TwistyPlayerModel";
import type { DragMovementInfo, DragTracker } from "./DragTracker";
export declare function positionToOrbitCoordinates(position: Vector3): Promise<OrbitCoordinates>;
export declare class TwistyOrbitControls {
    private model;
    private mirror;
    private canvas;
    private dragTracker;
    /** @deprecated */
    experimentalInertia: boolean;
    private onMovementBound;
    experimentalHasBeenMoved: boolean;
    constructor(model: TwistyPlayerModel, mirror: boolean, canvas: HTMLCanvasElement, dragTracker: DragTracker);
    temperMovement(f: number): number;
    onMove(e: CustomEvent<DragMovementInfo>): void;
    onMovement(movementX: number, movementY: number): {
        temperedX: number;
        temperedY: number;
    };
    onUp(e: CustomEvent<DragMovementInfo>): void;
}
