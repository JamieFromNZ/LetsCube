import type { Scene as ThreeScene } from "three";
import type { PuzzleLoader } from "../../../puzzles";
import type { Schedulable } from "../../controllers/RenderScheduler";
import type { TwistySceneModel } from "../../model/TwistySceneModel";
import { ManagedCustomElement } from "../ManagedCustomElement";
import { Twisty2DPuzzleWrapper } from "./Twisty2DPuzzleWrapper";
export declare class Twisty2DSceneWrapper extends ManagedCustomElement implements Schedulable {
    #private;
    model?: TwistySceneModel | undefined;
    private effectiveVisualization?;
    disconnect(): void;
    constructor(model?: TwistySceneModel | undefined, effectiveVisualization?: "2D" | "experimental-2D-LL" | undefined);
    connectedCallback(): Promise<void>;
    scene(): Promise<ThreeScene>;
    scheduleRender(): void;
    currentTwisty2DPuzzleWrapper(): Twisty2DPuzzleWrapper | null;
    setCurrentTwisty2DPuzzleWrapper(twisty2DPuzzleWrapper: Twisty2DPuzzleWrapper): Promise<void>;
    onPuzzleLoader(puzzleLoader: PuzzleLoader): Promise<void>;
}
