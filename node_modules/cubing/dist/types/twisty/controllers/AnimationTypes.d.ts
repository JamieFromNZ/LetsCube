import type { Move } from "../../alg";
import type { KState } from "../../kpuzzle/KState";
export declare type MillisecondTimestamp = number;
export declare type Duration = MillisecondTimestamp;
export declare type Timestamp = MillisecondTimestamp;
export declare type Fraction = number;
export declare enum Direction {
    Forwards = 1,
    Paused = 0,
    Backwards = -1
}
export declare function directionScalar(direction: Direction): MillisecondTimestamp;
export interface MoveInProgress {
    move: Move;
    direction: Direction;
    fraction: number;
}
export declare type PuzzlePosition = {
    state: KState;
    movesInProgress: MoveInProgress[];
};
export declare enum BoundaryType {
    Move = "move",
    EntireTimeline = "entire-timeline"
}
export interface TimeRange {
    start: MillisecondTimestamp;
    end: MillisecondTimestamp;
}
export interface PositionListener {
    onPositionChange(position: PuzzlePosition): void;
}
