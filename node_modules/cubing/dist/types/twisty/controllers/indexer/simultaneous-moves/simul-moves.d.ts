import { LineComment, Commutator, Conjugate, Pause, TraversalUp, Move, Alg, Grouping, Newline } from "../../../../alg";
import type { MillisecondTimestamp } from "../../AnimationTypes";
export declare type AnimatedLeafUnit = Move | Pause;
export interface LocalAnimLeavesWithRange {
    animLeafUnit: AnimatedLeafUnit;
    msUntilNext: MillisecondTimestamp;
    duration: MillisecondTimestamp;
}
export interface AnimLeafWithRange {
    animLeaf: AnimatedLeafUnit;
    start: MillisecondTimestamp;
    end: MillisecondTimestamp;
}
export declare class LocalSimulMoves extends TraversalUp<LocalAnimLeavesWithRange[]> {
    traverseAlg(alg: Alg): LocalAnimLeavesWithRange[];
    traverseGroupingOnce(alg: Alg): LocalAnimLeavesWithRange[];
    traverseGrouping(grouping: Grouping): LocalAnimLeavesWithRange[];
    traverseMove(move: Move): LocalAnimLeavesWithRange[];
    traverseCommutator(commutator: Commutator): LocalAnimLeavesWithRange[];
    traverseConjugate(conjugate: Conjugate): LocalAnimLeavesWithRange[];
    traversePause(pause: Pause): LocalAnimLeavesWithRange[];
    traverseNewline(_newline: Newline): LocalAnimLeavesWithRange[];
    traverseLineComment(_comment: LineComment): LocalAnimLeavesWithRange[];
}
export declare function simulMoves(a: Alg): AnimLeafWithRange[];
