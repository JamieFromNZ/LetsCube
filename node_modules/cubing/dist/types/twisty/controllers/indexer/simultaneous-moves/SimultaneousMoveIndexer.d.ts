import { Alg } from "../../../../alg";
import type { KPuzzle, KTransformation } from "../../../../kpuzzle";
import type { KState } from "../../../../kpuzzle/KState";
import { Duration, PuzzlePosition, Timestamp } from "../../AnimationTypes";
import type { CurrentMoveInfo } from "../AlgIndexer";
import { AnimatedLeafUnit } from "./simul-moves";
export declare class SimultaneousMoveIndexer {
    private kpuzzle;
    private animLeaves;
    constructor(kpuzzle: KPuzzle, alg: Alg);
    getAnimLeaf(index: number): AnimatedLeafUnit | null;
    private getAnimLeafWithRange;
    indexToMoveStartTimestamp(index: number): Timestamp;
    timestampToIndex(timestamp: Timestamp): number;
    timestampToPosition(timestamp: Timestamp, startState?: KState): PuzzlePosition;
    currentMoveInfo(timestamp: Timestamp): CurrentMoveInfo;
    stateAtIndex(index: number, startState?: KState): KState;
    transformationAtIndex(index: number): KTransformation;
    algDuration(): Duration;
    numAnimatedLeaves(): number;
    moveDuration(index: number): number;
}
