import type { Alg, Move } from "../../../../alg";
import type { KPuzzle, KTransformation } from "../../../../kpuzzle";
import type { KState } from "../../../../kpuzzle/KState";
import type { Duration, Timestamp } from "../../AnimationTypes";
import type { AlgIndexer } from "../AlgIndexer";
export declare class TreeAlgIndexer implements AlgIndexer {
    private kpuzzle;
    private decoration;
    private walker;
    constructor(kpuzzle: KPuzzle, alg: Alg);
    getAnimLeaf(index: number): Move | null;
    indexToMoveStartTimestamp(index: number): Timestamp;
    indexToMovesInProgress(index: number): Timestamp;
    stateAtIndex(index: number, startState?: KState): KState;
    transformationAtIndex(index: number): KTransformation;
    numAnimatedLeaves(): number;
    timestampToIndex(timestamp: Timestamp): number;
    algDuration(): Duration;
    moveDuration(index: number): number;
}
